{"version":3,"sources":["components/Header.js","components/Footer.js","components/CreateMat.js","components/ListNotes.js","components/CreateNote.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Component","Footer","src","alt","host","apiGetMats","apiPostMats","apiDeleteMats","CreateMat","state","mats","matname","getMats","a","axios","get","res","setState","data","onChangeMatname","e","target","value","onSubmit","preventDefault","post","deleteMat","id","delete","this","type","onChange","placeholder","map","mat","key","_id","onDoubleClick","apideleteNotes","ListNotes","notes","deleteNote","window","confirm","getNotes","note","title","onClick","content","format","date","apiCreateNote","apiPutNotes","CreateNote","matSelected","Date","editing","newNote","put","location","href","onInputChange","name","onChangeDate","props","match","params","required","selected","App","path","exact","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1d4866aa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <header>\n                {/* <img src=\"logo512.png\" alt=\"Logo\"/> */}\n                <h1>NÃ¼te</h1>\n                <div className=\"nav\">\n                    <Link to=\"/\">\n                        <h2>Notas</h2>\n                    </Link>\n                    <Link to=\"/create\">\n                        <h2>Crear Nota</h2>\n                    </Link>\n                    <Link to=\"/mat\">\n                        <h2>Crear Materias</h2>\n                    </Link>\n                </div>\n            </header>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport './Footer.css'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div>\n                <footer className=\"footer1\">\n                    &copy; 2019, todos los derechos reservados\n                </footer>\n\n                <footer className=\"footernone\">\n                    <Link to=\"/\">\n                        <img src=\"img/notewhite.png\" alt=\"Note\" className=\"iconfooter\"/>\n                        <h2>Notas</h2>\n                    </Link>\n                    <Link to=\"/create\">\n                        <img src=\"img/addnotewhite.png\" alt=\"Create\" className=\"iconfooter\"/>\n                        <h2>Crear</h2>\n                    </Link>\n                    <Link to=\"/mat\">\n                        <img src=\"img/book.png\" alt=\"Mat\" className=\"iconfooter\"/>\n                        <h2>Materias</h2>\n                    </Link>\n                    <Link to=\"/\">\n                        <img src=\"img/user.png\" alt=\"User\" className=\"iconfooter\"/>\n                        <h2>Usuario</h2>\n                    </Link>\n                </footer>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport './CreateMat.css';\n\nconst host = '192.168.1.73';\n\nconst apiGetMats = 'http://' + host + ':4000/api/mats';\nconst apiPostMats = 'http://' + host + ':4000/api/mats';\nconst apiDeleteMats = 'http://' + host + ':4000/api/mats/';\n\n\n\nexport default class CreateMat extends Component {\n\n    state = {\n        mats: [],\n        matname: ''\n    }\n\n    async componentDidMount() {\n        this.getMats();\n    }\n\n    getMats = async () => {\n        const res = await axios.get(apiGetMats);\n        this.setState({mats: res.data});\n    }\n\n    onChangeMatname = (e) => {\n        this.setState({\n            matname: e.target.value\n        })\n    }\n\n    onSubmit = async e => {\n        e.preventDefault();\n        await axios.post(apiPostMats, {\n            matname: this.state.matname\n        })\n        this.setState({matname: ''});\n        this.getMats();\n    }\n\n    deleteMat = async (id) => {\n        await axios.delete(apiDeleteMats + id);\n        this.getMats();\n    }\n\n    render() {\n        return (\n            <div className=\"main\">\n                <form onSubmit={this.onSubmit} className=\"form\"> \n                    <h3>Crea nueva Materia</h3>\n                    <input type=\"text\" className=\"text\" onChange={this.onChangeMatname} placeholder=\"Materia:\"/>\n                    <button type=\"submit\" className=\"button\">Guardar</button>\n                </form>\n                <div className=\"second\">\n                    <h3>Materias definidas</h3>\n                    <ul>\n                        {\n                        this.state.mats.map(mat => <li className=\"\" key={mat._id} onDoubleClick={() => this.deleteMat(mat._id)}\n                        >\n                            {mat.matname}\n                        </li>)\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { format } from 'timeago.js'\nimport { Link } from 'react-router-dom'\n\nimport './ListNotes.css';\n\nconst host = '192.168.1.73';\nconst apigetNotes = 'http://' + host + ':4000/api/notes';\nconst apideleteNotes = 'http://' + host + ':4000/api/notes/';\n\nexport default class ListNotes extends Component {\n\n    state= {\n        notes: []\n    }\n\n    componentDidMount() {\n        this.getNotes();\n    }\n    \n    async getNotes() {\n        const res = await axios.get(apigetNotes);\n        this.setState({notes: res.data});\n    }\n\n    deleteNote = async (id) => {\n        const check = window.confirm('Quieres checar e eliminar la nota');\n        if (check) {\n            await axios.delete(apideleteNotes + id);\n            this.getNotes();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"grid-main\">\n                {\n                    this.state.notes.map(note => (\n                        <div className=\"grid-notes\" key={note._id}>\n                            <div className=\"block\">\n                            <h3 className=\"title\">{note.title}</h3>\n                            <Link to={\"/edit/\" + note._id}>\n                                <img src=\"/img/edit-button.png\" alt=\"Edit\" className=\"icon\"/>\n                            </Link>\n                            <img src=\"/img/check.png\" alt=\"Check\" className=\"icon check\" onClick={() => this.deleteNote(note._id)}/>\n                            </div>\n                            <p className=\"mat\">{note.mat}</p>\n                            <p className=\"content\">{note.content}</p>\n                            <p className=\"date\">{format(note.date)}</p>\n                            <button className=\"button none\">Check</button>\n                        </div>\n                    ))\n                }\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nimport './CreateNote.css';\n\nconst host = '192.168.1.73';\n\nconst apiMats = 'http://' + host + ':4000/api/mats';\nconst apiCreateNote = 'http://' + host + ':4000/api/notes';\nconst apiPutNotes = 'http://' + host + ':4000/api/notes/';\n\nexport default class CreateNote extends Component {\n\n    state= {\n        mats: [],\n        matSelected: '',\n        title: '',\n        content: '',\n        date: new Date(),\n        editing: false,\n        _id: ''\n    }\n\n    async componentDidMount() {\n        const res = await axios.get(apiMats);\n        this.setState({\n            mats: res.data.map(mat => mat.matname),\n            matSelected: res.data[0].matname\n        })\n        if (this.props.match.params) {\n            const res = await axios.get(apiPutNotes + this.props.match.params.id);\n            this.setState({\n                title: res.data.title,\n                content: res.data.content,\n                date: new Date(res.data.date),\n                matSelected: res.data.mat,\n                editing: true,\n                _id: this.props.match.params.id\n            })\n        }\n    }\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n        const newNote = {\n            title: this.state.title,\n            content: this.state.content,\n            date: this.state.date,\n            mat: this.state.matSelected\n        };\n        if (this.state.editing) {\n            await axios.put(apiPutNotes + this.state._id, newNote);\n        } else {\n            await axios.post(apiCreateNote, newNote);\n        }\n        window.location.href = '/';\n       }\n\n    onInputChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeDate = date => {\n        this.setState({date});\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit} className=\"formCreateNote\">\n                <h2 className=\"black\">Crea una nota</h2>\n                {/* SELECT USER */}\n                <select className=\"select\" name=\"matSelected\" onChange={this.onInputChange} value={this.state.matSelected}>\n                    {\n                        this.state.mats.map(mat =>\n                            <option key={mat} value={mat}>\n                                {mat}\n                            </option>)\n                    }\n                </select>\n                <input type=\"text\" className=\"text\" placeholder=\"TÃ­tulo\" name=\"title\" required onChange={this.onInputChange} value={this.state.title}/>\n                <textarea name=\"content\" className=\"text\" placeholder=\"AÃ±ade una descripciÃ³n\" required onChange={this.onInputChange} value={this.state.content}></textarea>\n                <DatePicker className=\"text datepicker\" selected={this.state.date} onChange={this.onChangeDate}/>\n                <button type=\"submit\" className=\"button buttoncreate\">\n                    Guardar Nota\n                </button>\n            </form>\n        )\n    }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport CreateMat from './components/CreateMat';\nimport ListNotes from './components/ListNotes';\nimport CreateNote from './components/CreateNote';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Route path=\"/\" exact component={ListNotes} />\n        <Route path=\"/edit/:id\" component={CreateNote} />\n        <Route path=\"/create\" component={CreateNote} />\n        <Route path=\"/mat\" component={CreateMat} />\n\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and mats)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}